# -*- shell-script -*-
# TACC startup script: ~/.bashrc version 2.1 -- 12/17/2013


# This file is NOT automatically sourced for login shells.
# Your ~/.profile can and should "source" this file.

# Note neither ~/.profile nor ~/.bashrc are sourced automatically by
# bash scripts. However, a script inherits the environment variables
# from its parent shell.  Both of these facts are standard bash
# behavior.
#
# In a parallel mpi job, this file (~/.bashrc) is sourced on every 
# node so it is important that actions here not tax the file system.
# Each nodes' environment during an MPI job has ENVIRONMENT set to
# "BATCH" and the prompt variable PS1 empty.

#################################################################
# Optional Startup Script tracking. Normally DBG_ECHO does nothing
if [ -n "$SHELL_STARTUP_DEBUG" ]; then
  DBG_ECHO "${DBG_INDENT}~/.bashrc{"
fi

############
# SECTION 1
#
# There are three independent and safe ways to modify the standard
# module setup. Below are three ways from the simplest to hardest.
#   a) Use "module save"  (see "module help" for details).
#   b) Place module commands in ~/.modules
#   c) Place module commands in this file inside the if block below.
#
# Note that you should only do one of the above.  You do not want
# to override the inherited module environment by having module
# commands outside of the if block[3].

if [ -z "$__BASHRC_SOURCED__" -a "$ENVIRONMENT" != BATCH ]; then
  export __BASHRC_SOURCED__=1

  ##################################################################
  # **** PLACE MODULE COMMANDS HERE and ONLY HERE.              ****
  ##################################################################

  # module load git
  module load intel/15.0.3
  module load cuda/7.5
  module load cmake
  module load hdf5
  module load python
  module load qt
  module load git/2.7.0
  #module load matlab/2015a
fi

############
# SECTION 2
#
# Please set or modify any environment variables inside the if block
# below.  For example, modifying PATH or other path like variables
# (e.g LD_LIBRARY_PATH), the guard variable (__PERSONAL_PATH___) 
# prevents your PATH from having duplicate directories on sub-shells.

if [ -z "$__PERSONAL_PATH__" ]; then
  export __PERSONAL_PATH__=1

  ###################################################################
  # **** PLACE Environment Variables including PATH here.        ****
  ###################################################################

  # export PATH=$HOME/bin:$PATH
  LOCAL_BIN=/work/01932/dineshj/CS381V/caffe_install_scripts/install/bin/:/home/04006/zhuode93/local_install/opt/OpenBLAS/bin:/home/04006/zhuode93/local_install/bin:/home/04006/zhuode93/torch/install/bin/
  LOCAL_INC=/work/01932/dineshj/CS381V/caffe_install_scripts/install/include/:/home/04006/zhuode93/local_install/opt/OpenBLAS/include:/home/04006/zhuode93/local_install/include
  LOCAL_LIB=/work/01932/dineshj/CS381V/caffe_install_scripts/install/lib/:/home/04006/zhuode93/local_install/opt/OpenBLAS/lib:/home/04006/zhuode93/local_install/lib
  GCC471_BIN=/opt/apps/gcc/4.7.1/bin/
  GCC471_LIB=/opt/apps/gcc/4.7.1/lib/:/opt/apps/gcc/4.7.1/lib64/

  #export MATLAB_ROOT=/work/apps/matlab/2015a/
  export LM_LICENSE_FILE=/home/04006/zhuode93/MatlabLicense/natsci.txt
  
  export PATH=$LOCAL_BIN:$LOCAL_INC:$GCC471_BIN:$PATH
  export LD_LIBRARY_PATH=$LOCAL_LIB:$LD_LIBRARY_PATH:$GCC471_LIB:/lib64/:/usr/lib64:/usr/lib/:
  
  export PYTHONPATH=/work/01932/dineshj/CS381V/caffe_install_scripts/caffe/python/:$PYTHONPATH

fi

########################
# SECTION 3
#
# Controling the prompt: Suppose you want stampede1(14)$  instead of 
# login1.stampede(14)$ 
# 
#if [ -n "$PS1" ]; then
#   myhost=$(hostname -f)              # get the full hostname
#   myhost=${myhost%.tacc.utexas.edu}  # remove .tacc.utexas.edu
#   first=${myhost%%.*}                # get the 1st name (e.g. login1)
#   SYSHOST=${myhost#*.}               # get the 2nd name (e.g. stampede)
#   first5=$(expr substr $first 1 5)   # get first 5 character from $first
#   if [ "$first5" = "login" ]; then
#     num=$(expr $first : '[^0-9]*\([0-9]*\)') # get the number
#     HOST=${SYSHOST}$num                      # HOST -> stampede1
#   else
#     # first is not login1 so take first letter of system name
#     L=$(expr substr $SYSHOST 1 1 | tr '[:lower:]' '[:upper:]')
#
#     #  If host is c521-101.stampeded then
#     HOST=$L$first      # HOST  -> Sc521-101 
#   fi
#   PS1='$HOST(\#)\$ '   # Prompt either stampede1(14)$ or Sc521-101(14)$ 
#fi
alias mem='nvidia-smi'
#####################################################################
# **** Place any else below.                                     ****
#####################################################################

# alias m="more"
alias bls='/bin/ls'   # handy alias for listing a large directory.
alias dinesh='cd /work/01932/dineshj/CS381V' 
alias ll='ls -alh'
alias govis='~/govis.sh'
alias go='cdw;cd neural-style;pwd'
alias got='cdw;cd talk;pwd'
dinesh=/work/01932/dineshj/CS381V

##########
# Umask
#
# If you are in a group that wishes to share files you can use 
# "umask". to make your files be group readable.  Placing umask here 
# is the only reliable place for bash and will insure that it is set 
# in all types of bash shells.

# umask 022

###################################
# Optional Startup Script tracking 

if [ -n "$SHELL_STARTUP_DEBUG" ]; then
  DBG_ECHO "${DBG_INDENT}}"
fi


